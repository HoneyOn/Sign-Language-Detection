{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"imgMake","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPzvLspaOiPG4agqKabkwnx"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"lG4NvfruHgx4","executionInfo":{"status":"ok","timestamp":1622007552375,"user_tz":-540,"elapsed":629,"user":{"displayName":"‍김홍연[학생](공과대학 산업경영공학과)","photoUrl":"","userId":"18057660635001737100"}}},"source":["import cv2\n","import os\n","import time\n","import uuid"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"NMhEN5UCHwhT","executionInfo":{"status":"ok","timestamp":1622007552375,"user_tz":-540,"elapsed":6,"user":{"displayName":"‍김홍연[학생](공과대학 산업경영공학과)","photoUrl":"","userId":"18057660635001737100"}}},"source":["IMAGE_PATH = 'Tensorflow/workspace/images/colledtedimages'"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"-xlMfaM1IK5h","executionInfo":{"status":"ok","timestamp":1622007552376,"user_tz":-540,"elapsed":6,"user":{"displayName":"‍김홍연[학생](공과대학 산업경영공학과)","photoUrl":"","userId":"18057660635001737100"}}},"source":["labels = ['A','B','C','D','E']#,'F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y']\n","number_imgs = 5"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"rk0NpCtnIfgX","executionInfo":{"status":"error","timestamp":1622007740413,"user_tz":-540,"elapsed":2579,"user":{"displayName":"‍김홍연[학생](공과대학 산업경영공학과)","photoUrl":"","userId":"18057660635001737100"}},"outputId":"1df19763-d36d-4394-90ca-f6e6981a8a3c"},"source":["for label in labels:\n","  !mkdir { 'Tensorflow\\workspace\\images\\collectedimages\\\\' + label}\n","  cap = cv2.VideoCapture(0)\n","  print('Collecting images for {}'.format(label))\n","  time.sleep(2)\n","  for imgnum in range (number_imgs):\n","    ret, frame =cap.read()\n","    imgname = os.path.join(IMAGE_PATH,label,label+'.'+'{}.jpg'.format(str (uuid.uuid1())))\n","    cv2.imwrite(imgname,frame)\n","    cv2.imshow('frame',frame)\n","    time.sleep(2)\n","\n","    if cv2.waitKey(1) and 0xff == ord('q'):\n","      break\n","    cap.release()"],"execution_count":10,"outputs":[{"output_type":"stream","text":["mkdir: cannot create directory ‘TensorflowworkspaceimagescollectedimagesA’: File exists\n","Collecting images for A\n"],"name":"stdout"},{"output_type":"error","ename":"error","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31merror\u001b[0m                                     Traceback (most recent call last)","\u001b[0;32m<ipython-input-10-ffef0015e770>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      7\u001b[0m     \u001b[0mret\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mframe\u001b[0m \u001b[0;34m=\u001b[0m\u001b[0mcap\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m     \u001b[0mimgname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mIMAGE_PATH\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mlabel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mlabel\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;34m'.'\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;34m'{}.jpg'\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstr\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0muuid\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0muuid1\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m     \u001b[0mcv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimgname\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mframe\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m     \u001b[0mcv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'frame'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mframe\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m     \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msleep\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31merror\u001b[0m: OpenCV(4.1.2) /io/opencv/modules/imgcodecs/src/loadsave.cpp:715: error: (-215:Assertion failed) !_img.empty() in function 'imwrite'\n"]}]},{"cell_type":"code","metadata":{"id":"3L2x3UD2Jlva"},"source":[""],"execution_count":null,"outputs":[]}]}